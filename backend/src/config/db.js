// =======================================
// üìÇ backend/src/config/db.js
// PostgreSQL Connection (Supabase + Local fallback)
// =======================================
import dotenv from 'dotenv';
import pkg from 'pg';

dotenv.config();
const { Pool } = pkg;

let pool;

// üß† ∆Øu ti√™n d√πng Supabase (DATABASE_URL)
console.log('üîç DATABASE_URL =', process.env.DATABASE_URL);

if (process.env.DATABASE_URL) {
  pool = new Pool({
    connectionString: process.env.DATABASE_URL,
    ssl: {
      require: true,
      rejectUnauthorized: false
    }
  }); 
  console.log('üåê Using Supabase cloud database...');
} else {
  // üíª N·∫øu kh√¥ng c√≥ DATABASE_URL th√¨ d√πng PostgreSQL local
  pool = new Pool({
    user: process.env.DB_USER || 'postgres',
    password: process.env.DB_PASSWORD || 'Admin123',
    host: process.env.DB_HOST || 'localhost',
    database: process.env.DB_NAME || 'lostandfound',
    port: process.env.DB_PORT ? parseInt(process.env.DB_PORT, 10) : 5432,
    ssl: process.env.DB_SSL === 'true' ? { rejectUnauthorized: false } : false,
  });
  console.log('üíª Using local PostgreSQL database...');
}

// ‚úÖ Ki·ªÉm tra k·∫øt n·ªëi khi kh·ªüi ƒë·ªông
pool
  .connect()
  .then(() => console.log('‚úÖ Database connected successfully!'))
  .catch((err) => {
    console.error('‚ùå Database connection failed:', err.message);
    console.warn('‚ö†Ô∏è Server will continue running without DB connection...');
  });

export { pool };
